@model OnlineVotingS.API.Models.AdminViewModels.ResultViewModels.GenerateResultViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Results</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/new-sidebar.css" rel="stylesheet">
    <link href="~/css/Result/generate-result.css" rel="stylesheet">
</head>
<body>
    <!-- Sidebar Menu -->
    @await Html.PartialAsync("_NewSidebar")

    <div class="container-with-sidebar bg-light p-4 rounded">
        <h4 class="text-center mb-4">Generate Results</h4>
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-danger">
                @TempData["Message"]
            </div>
        }
        <form method="post" action="@Url.Action("GenerateResult")" class="form-container">
            <label for="SelectedElectionID" class="form-label">Select Election</label>
            @Html.DropDownListFor(model => model.SelectedElectionID,
                     new SelectList(Model.OngoingElections, "ElectionID", "Title"),
                     "Select an election",
                     new { @class = "form-control select-dropdown", id = "electionDropdown" })
            <div class="mb-3">
                <label for="SelectedCandidateID" class="form-label">Select Candidate</label>
                <select id="candidateDropdown" name="CandidateId" class="form-control select-dropdown" disabled>
                    <option>Select a candidate</option>
                </select>
            </div>

            <button type="submit" class="btn btn-primary">Generate Results</button>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#electionDropdown').change(function () {
                var electionId = $(this).val();
                var candidateDropdown = $('#candidateDropdown');

                if (electionId) {
                    $.getJSON('@Url.Action("GetCandidatesByElection")', { electionId: electionId }, function (data) {
                        candidateDropdown.empty();
                        candidateDropdown.append('<option>Select a candidate</option>');
                        $.each(data, function (index, item) {
                            candidateDropdown.append('<option value="' + item.candidateID + '">' + item.fullName + '</option>'); // Adjust for case-sensitivity
                        });
                        candidateDropdown.prop('disabled', false);
                    });
                } else {
                    candidateDropdown.empty().append('<option>Select a candidate</option>').prop('disabled', true);
                }
            });
        });

        $(document).ready(function () {
            $('#electionDropdown').change(function () {
                var electionId = $(this).val();
                if (electionId) {
                    $.getJSON('@Url.Action("GetCandidatesByElection", "Admin")', { electionId: electionId }, function (data) {
                        var candidateDropdown = $('#candidateDropdown');
                        candidateDropdown.empty();
                        candidateDropdown.append('<option>Select a candidate</option>');
                        $.each(data, function (index, item) {
                            candidateDropdown.append('<option value="' + item.value + '">' + item.text + '</option>');
                        });
                    });
                } else {
                    $('#candidateDropdown').empty().append('<option>Select a candidate</option>');
                }
            });
        });
    </script>
</body>
</html>
