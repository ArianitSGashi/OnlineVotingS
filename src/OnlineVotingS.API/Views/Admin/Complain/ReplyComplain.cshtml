@model OnlineVotingS.API.Models.AdminViewModels.ComplaintViewModels.ReplyComplaintViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reply to Complaint</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/new-sidebar.css" rel="stylesheet">
    <link href="~/css/Complain/reply-complain.css" rel="stylesheet">
</head>
<body>
    @await Html.PartialAsync("_NewSidebar")

    <div class="content-container p-4">
        <h4 class="mb-4 text-center">Reply to Complaint</h4>
        <form id="replyComplaintForm" class="form-container">
            <div class="mb-3">
                <label for="complaintId" class="form-label">Complaint ID</label>
                @Html.DropDownListFor(m => m.ComplaintID, Model.Complaints, "Select complaint no.", new { @class = "form-control", id = "complaintId" })
                @Html.ValidationMessageFor(m => m.ComplaintID, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="replyText" class="form-label">Reply</label>
                @Html.TextAreaFor(m => m.ReplyText, new { @class = "form-control", placeholder = "Reply", rows = "4", id = "replyText" })
                @Html.ValidationMessageFor(m => m.ReplyText, "", new { @class = "text-danger" })
            </div>
            <button type="submit" class="btn btn-primary">Reply</button>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
    $(document).ready(function () {
        $('#replyComplaintForm').on('submit', function (e) {
            e.preventDefault();

            var formData = {
                ComplaintID: parseInt($('#complaintId').val()),
                ReplyText: $('#replyText').val(),
                // ReplyDate is set server-side, no need to send it from the client
            };

            $.ajax({
                url: '/api/Complaints/Reply',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (result) {
                    alert(result);
                    $('#replyComplaintForm')[0].reset();
                },
                error: function (xhr, status, error) {
                    let errorMessage = 'An error occurred.';
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        errorMessage = xhr.responseJSON.message;
                    } else if (xhr.responseText) {
                        errorMessage = xhr.responseText;
                    }
                    alert('Error: ' + errorMessage);
                }
            });
        });
    });
</script>
</body>
</html>
